gl <- gl + geom_point()
gl <- gl + geom_line(aes(color=id2))
ggsave("id_lineplot.png", gl)
lm_eqn <- function(df) {
m <- lm(final ~ exp, df)
eq <- substitute(italic(y) == a + b %.% italic(x) *","* ~~italic(r)~"="~r1 *","* ~~italic(R)^2~"="~r2,
list(a = format(coef(m)[1], digits=2),
b = format(coef(m)[2], digits=2),
r1 = format(sqrt(summary(m)$r.squared), digits=3),
r2 = format(summary(m)$r.squared, digits=3)))
as.character(as.expression(eq))
}
score_wide2 <- score_wide %>% group_by(id,name,final) %>% summarise(exp=mean(c(e6,e7,e8,e9)))
#score_exp <- score_long %>% filter(str_detect(class, "e")) %>% group_by(id,name) %>% summarise(exp=mean(score))
#score_final <- score_long %>% filter(str_detect(class, "final")) %>% group_by(id,name) %>% summarise(final=score)
#score_wide2 <- inner_join(score_exp, score_final)
gr <- ggplot(score_wide2, aes(exp, final))
gr <- gr + geom_point()
gr <- gr + geom_smooth(method="lm", color="red", formula=y~x)
gr <- gr + geom_text(x=82, y=100, label=lm_eqn(score_wide2), parse=TRUE, size=5, color="blue")
ggsave("correlation_plot.png", gr)
id1 <- score_wide2[which.min(score_wide2$final),]$id
score_wide3 <- score_wide2 %>% filter(id!=id1)
#score_wide3 <- score_wide2 %>% filter(id!="2013052125")
gr2 <- ggplot(score_wide3, aes(exp, final))
gr2 <- gr2 + geom_point()
gr2 <- gr2 + geom_smooth(method="lm", color="red", formula=y~x)
gr2 <- gr2 + geom_text(x=82, y=100, label=lm_eqn(score_wide3), parse=TRUE, size=5, color="blue")
ggsave("correlation_plot_correct.png", gr2)
score2014 <- read_csv("score_2014.csv")
View(score_wide2)
m <- lm(final ~ exp, score_wide3)
m
predict.lm(m, score2014)
View(score2014)
predict(m, score2014)
2.381*84.5-124.148
predict(m, score2014, interval="prediction")
library(dplyr)
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
s4 <- bind_cols(score2014, mp)
mode(mp)
s4 <- bind_cols(score2014, as.data.frame(mp))
View(s4)
View(score_long2)
colnames(s4) <- c("id", "name", "exp", "final", "fl", "fu")
g <- ggplot(s4, aes(x=id, y=final))
g <- g + geom_bar(fill=id, colour=id)
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
g <- ggplot(s4, aes(x=id, y=final))
g <- g + geom_bar()
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
View(s4)
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar()
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar()
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
g <- ggplot(s4, aes(x=as.factor(id), y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
s4 <- bind_cols(score2014, as.data.frame(mp))
colnames(s4) <- c("ID", "name", "exp", "final", "fl", "fu")
s4 <- s4 %>% mutate(id=as.factor(str_replace(id, "20140521", "")))
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
library(readr)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
s4 <- bind_cols(score2014, as.data.frame(mp))
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
s4 <- bind_cols(score2014, as.data.frame(mp))
colnames(s4) <- c("ID", "name", "exp", "final", "fl", "fu")
s4 <- s4 %>% mutate(id=as.factor(str_replace(ID, "20140521", "")))
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
?geom_hline
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=5)
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=12)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score", fill="Student ID")
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score", fill="ID")
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g <- g + guides(fill=FALSE)
g
?predict
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
View(mp)
mp <- predict(m, score2014, interval="co")
View(mp)
mp <- predict(m, score2014, interval="confidence")
View(mp)
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="confidence")
s4 <- bind_cols(score2014, as.data.frame(mp))
colnames(s4) <- c("ID", "name", "exp", "final", "fl", "fu")
s4 <- s4 %>% mutate(id=as.factor(str_replace(ID, "20140521", "")))
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g <- g + guides(fill=FALSE)
g
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
s4 <- bind_cols(score2014, as.data.frame(mp))
colnames(s4) <- c("ID", "name", "exp", "final", "fl", "fu")
s4 <- s4 %>% mutate(id=as.factor(str_replace(ID, "20140521", "")))
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g <- g + guides(fill=FALSE)
g
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
s4 <- bind_cols(score2014, as.data.frame(mp))
colnames(s4) <- c("ID", "name", "exp", "final", "fl", "fu")
s4 <- s4 %>% mutate(id=as.factor(str_replace(ID, "20140521", "")))
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g <- g + guides(fill=FALSE)
ggsave("prediction_2014.png", g)
library(readr)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
score_wide <- read_csv("score_2013.csv")
score_long <- gather(score_wide, "class", "score", 3:7)
score_long <- score_long %>% mutate(id2=as.factor(str_replace(id, "20130521", "")))
View(score_wide)
View(score_long)
pairwise.t.test(score_long$score, score_long$class)
library(broom)
t<-pairwise.t.test(score_long$score, score_long$class)
tidy(t)
t.test(score_wide$e6, score_wide$e7)
t.test(score_wide$e6, score_wide$e8)
?pairwise.t.test
t<-pairwise.t.test(score_long$score, score_long$class, p.adjust.method="none")
tidy(t)
t<-pairwise.t.test(score_long$score, score_long$class, p.adjust.method="none", pool.sd=FALSE)
tidy(t)
score_long2 <- score_long
gb <- ggplot(score_long2, aes(class, score))
gb <- gb + geom_boxplot(aes(color=class))
ggsave("exp_boxplog.png", gb)
gl <- ggplot(score_long2, aes(class, score, group=id2))
tp <- pairwise.t.test(score_long2$score, score_long2$class, p.adjust.method="none", pool.sd=FALSE)
tp
tp_tidy <- tidy(tp)
tp_tidy <- tidy(tp)
View(tp_tidy)
mat = cbind(rbind(matrix(rnorm(16, -1), 4), matrix(rnorm(32, 1), 8)),
rbind(matrix(rnorm(24, 1), 4), matrix(rnorm(48, -1), 8)))
# permute the rows and columns
mat = mat[sample(nrow(mat), nrow(mat)), sample(ncol(mat), ncol(mat))]
rownames(mat) = paste0("R", 1:12)
colnames(mat) = paste0("C", 1:10)
mat
View(mat)
?spread
t_p <- tidy(tp) %>% spread(group2, p.value)
View(t_p)
?tidy
t_p <- tidy(tp)
hm <- ggplot(tp, aes(x=group1, y= group2, fill=p.value))
t_test <- pairwise.t.test(score_long2$score, score_long2$class, p.adjust.method="none", pool.sd=FALSE)
t_p <- tidy(tp)
hm <- ggplot(tp, aes(x=group1, y= group2, fill=p.value))
str(t_p)
hm <- ggplot(t_p, aes(x=group1, y= group2, fill=p.value))
hm <- hm + geom_tile()
hm
?upper.tri
(m2 <- matrix(1:20, 4, 5))
lower.tri(m2)
t_p %>% spread(group2, p.value)
(m2 <- matrix(1:20, 4, 5))
upper.tri(m2)
t<-t_p %>% spread(group2, p.value)
t
upper.tri(t)
t <- t_p %>% spread(group2, p.value) %>% select(-group1)
t<-t_p %>% spread(group2, p.value)
t <- t_p %>% spread(group2, p.value) %>% select(-group1)
t
upper.tri(t)
upper.tri(t) <- lower.tri(t)
t
t(t)
t(t)[upper.tri]
t(t)[upper.tri(t)]
t_test
t_test$p.value
t<-t_test$p.value
t(t)
t(t)[upper.tri(t)]
upper.tri(t)<-t(t)[upper.tri(t)]
t[upper.tri(t)]<-t(t)[upper.tri(t)]
t
t_test$method
t_test$data.name
t_test$p.adjust.method
t_test$p.value
t_test <- pairwise.t.test(score_long2$score, score_long2$class, p.adjust.method="none", pool.sd=FALSE)
t_p <- tidy(tp)
hm <- ggplot(t_p, aes(x=group1, y= group2, fill=p.value))
hm <- hm + geom_tile()
hm
library(readr)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(broom)
# Read data for 2013, and tranform it
score_wide <- read_csv("score_2013.csv")
score_long <- gather(score_wide, "class", "score", 3:7)
score_long <- score_long %>% mutate(id2=as.factor(str_replace(id, "20130521", "")))
# Comparation between experiments
score_long2 <- score_long %>% filter(str_detect(class, "e"))
gb <- ggplot(score_long2, aes(class, score))
gb <- gb + geom_boxplot(aes(color=class))
ggsave("exp_boxplog.png", gb)
# Heatmap p.value bwteen experiments
t_test <- pairwise.t.test(score_long2$score, score_long2$class, p.adjust.method="none", pool.sd=FALSE)
t_p <- tidy(tp)
t_p <- tidy(t_test)
t_p
?combine
?pairwise.t.test
t_test$p.adjust.method
t_test$p.value
t_test
t<-t_test$p.value
library(gdata)
upperTriangle(t)
lowerTriangle(t)
t
rbind(rep(0,3),t)
cbind(rep("NA",nrow(t)))
cbind(rep("NA",nrow(t)),t)
cbind(t,rep("NA",nrow(t)))
t<-t_test$p.value
t <- cbind(t, rep(NA, nrow(t)))
rbind(cbind(t,rep("NA",nrow(t)))
)
t<-t_test$p.value
t <- cbind(t, rep(NA, nrow(t)))
t
t <- rbind(rep(NA,ncol(t), t))
t
t<-t_test$p.value
t <- cbind(t, rep(NA, nrow(t)))
t <- rbind(rep(NA,ncol(t)), t)
t
score_long2$score
score_long2$class
as.factor(score_long2$class)
colnames(t) <- levels(as.factor(score_long2$class))
rownames(t) <- levels(as.factor(score_long2$class))
t
lower.tri(t)
t[lower.tri(t)]
t[upper.tri(t)] <- t(t)[upper.tri(t)]
t
diag(t)
diag(t) <- 1
t
library(ComplexHeatmap)
Heatmap(t)
Heatmap(t, cluster_rows=FALSE, cluster_columns=FALSE)
Heatmap(t, col=colorRamp2(c(0, 0.5, 1), c("green", "white", "red")), cluster_rows=FALSE, cluster_columns=FALSE)
library(circlize)
Heatmap(t, col=colorRamp2(c(0, 0.5, 1), c("green", "white", "red")), cluster_rows=FALSE, cluster_columns=FALSE)
Heatmap(t, col=colorRamp2(c(0, 0.5, 1), c("red", "blue", "white")), cluster_rows=FALSE, cluster_columns=FALSE)
Heatmap(t, col=colorRamp2(c(0, 0.5, 1), c("red", "blue", "gray")), cluster_rows=FALSE, cluster_columns=FALSE)
?Heatmap
Heatmap(t, col=colorRamp2(c(0, 0.5, 1), c("red", "blue", "gray")), cluster_rows=FALSE, cluster_columns=FALSE)
t
t<-t_test$p.value
t <- cbind(t, rep(NA, nrow(t)))
t <- rbind(rep(NA,ncol(t)), t)
colnames(t) <- levels(as.factor(score_long2$class))
rownames(t) <- levels(as.factor(score_long2$class))
t[upper.tri(t)] <- t(t)[upper.tri(t)]
Heatmap(t, col=colorRamp2(c(0, 0.5, 1), c("red", "blue", "gray")), cluster_rows=FALSE, cluster_columns=FALSE)
gl <- ggplot(score_long2, aes(class, score, group=id2))
t
Heatmap(t,  cluster_rows=FALSE, cluster_columns=FALSE)
Heatmap(t, col = colorRamp2(c(0, 0.01, 0.05,0.5,1), c("red", "yellow", "blue", "white")),
cluster_rows=FALSE, cluster_columns=FALSE)
Heatmap(t, col = colorRamp2(c(0, 0.01, 0.05,0.5,1), c("red", "yellow", "green", blue", "white")),
Heatmap(t, col = colorRamp2(c(0, 0.01, 0.05,0.5,1), c("red", "yellow", "green", "blue", "white")),
cluster_rows=FALSE, cluster_columns=FALSE)
gl <- ggplot(score_long2, aes(class, score, group=id2))
Heatmap(t, col = colorRamp2(c(0, 0.01, 0.05,0.2,0.7), c("red", "yellow", "green", "blue", "white")),
cluster_rows=FALSE, cluster_columns=FALSE)
gl <- ggplot(score_long2, aes(class, score, group=id2))
Heatmap(t, col = colorRamp2(c(0, 0.01, 0.05,0.1), c("red", "green", "blue", "white")),
cluster_rows=FALSE, cluster_columns=FALSE)
gl <- ggplot(score_long2, aes(class, score, group=id2))
Heatmap(t, col = colorRamp2(c(0, 0.01, 0.05,0.1), c("red", "green", "blue", "gray")),
cluster_rows=FALSE, cluster_columns=FALSE)
Heatmap(t,
cluster_rows=FALSE, cluster_columns=FALSE)
gl <- ggplot(score_long2, aes(class, score, group=id2))
Heatmap(t, col = colorRamp2(c(0, 0.01, 0.05,0.1), c("darkred", "red", "yellow", "gray")),
cluster_rows=FALSE, cluster_columns=FALSE)
gl <- ggplot(score_long2, aes(class, score, group=id2))
hm <- ggplot(t, aes(x=group1, y= group2, fill=p.value))
hm <- hm + geom_tile()
hm
t_p <- tidy(t_test)
hm <- ggplot(t_p, aes(x=group1, y= group2, fill=p.value))
hm <- hm + geom_tile()
hm
t <- t_test$p.value
t <- cbind(t, rep(NA, nrow(t)))
t <- rbind(rep(NA,ncol(t)), t)
colnames(t) <- levels(as.factor(score_long2$class))
rownames(t) <- levels(as.factor(score_long2$class))
t[upper.tri(t)] <- t(t)[upper.tri(t)]
Heatmap(t, col = colorRamp2(c(0, 0.01, 0.05,0.1), c("darkred", "red", "yellow", "gray")),
cluster_rows=FALSE, cluster_columns=FALSE)
max(t)
min(t)
min(t,na.omit())
?min
min(t,na.rm=T
)
max(t,na.rm=T)
col = colorRamp2(seq(min(t, na.rm=TRUE), max(t, na.rm=TRUE), length=3), c("blue", "#EEEEEE", "red"), space = "RGB")
Heatmap(t, col=col,
cluster_rows=FALSE, cluster_columns=FALSE)
col = colorRamp2(seq(min(t, na.rm=TRUE), max(t, na.rm=TRUE), length=3), c("red", "#EEEEEE", "blue"), space = "RGB")
Heatmap(t, col=col,
cluster_rows=FALSE, cluster_columns=FALSE)
col = colorRamp2(seq(min(t, na.rm=TRUE), max(t, na.rm=TRUE), length=3), c("red", "#EEEEEE", "blue"), space="LAB")
Heatmap(t, col=col,
cluster_rows=FALSE, cluster_columns=FALSE)
col = colorRamp2(seq(min(t, na.rm=TRUE), max(t, na.rm=TRUE), length=3), c("red", "#EEEEEE", "blue"), space="RGB")
Heatmap(t, col=col,
cluster_rows=FALSE, cluster_columns=FALSE)
t
col = colorRamp2(seq(min(t, na.rm=TRUE), max(t, na.rm=TRUE), length=3), c("red", "#EEEEEE", "blue"), space="RGB")
Heatmap(t, col=col, heatmap_legend_param=list(title="p.value")
cluster_rows=FALSE, cluster_columns=FALSE)
Heatmap(t, col=col, heatmap_legend_param=list(title="p.value"),
cluster_rows=FALSE, cluster_columns=FALSE)
tri2mat <- function(tp, pf) {
tp <- cbind(tp, rep(NA, nrow(tp)))
tp <- rbind(rep(NA, ncol(tp)), tp)
colnames(tp) <- pf
rownames(tp) <- pf
t[upper.tri(tp)] <- t(tp)[upper.tri(tp)]
#diag(tp) <- 1
}
t_test <- pairwise.t.test(score_long2$score, score_long2$class, p.adjust.method="none", pool.sd=FALSE)
tp <- t_test$p.value
pf <- levels(as.factor(score_long2$class))
tm <- tri2mat(tp, pf)
col = colorRamp2(seq(min(tm, na.rm=TRUE), max(tm, na.rm=TRUE), length=3), c("red", "#EEEEEE", "blue"), space="RGB")
Heatmap(tm, col=col, heatmap_legend_param=list(title="p.value"),
cluster_rows=FALSE, cluster_columns=FALSE)
tri2mat <- function(tp, pf) {
tp <- cbind(tp, rep(NA, nrow(tp)))
tp <- rbind(rep(NA, ncol(tp)), tp)
colnames(tp) <- pf
rownames(tp) <- pf
tp[upper.tri(tp)] <- t(tp)[upper.tri(tp)]
#diag(tp) <- 1
}
# Heatmap p.value bwteen experiments
t_test <- pairwise.t.test(score_long2$score, score_long2$class, p.adjust.method="none", pool.sd=FALSE)
tp <- t_test$p.value
pf <- levels(as.factor(score_long2$class))
tm <- tri2mat(tp, pf)
col = colorRamp2(seq(min(tm, na.rm=TRUE), max(tm, na.rm=TRUE), length=3), c("red", "#EEEEEE", "blue"), space="RGB")
Heatmap(tm, col=col, heatmap_legend_param=list(title="p.value"),
cluster_rows=FALSE, cluster_columns=FALSE)
tm
tri2mat <- function(tp, pf) {
tp <- cbind(tp, rep(NA, nrow(tp)))
tp <- rbind(rep(NA, ncol(tp)), tp)
colnames(tp) <- pf
rownames(tp) <- pf
tp[upper.tri(tp)] <- t(tp)[upper.tri(tp)]
#diag(tp) <- 1
}
t_test <- pairwise.t.test(score_long2$score, score_long2$class, p.adjust.method="none", pool.sd=FALSE)
tp <- t_test$p.value
pf <- levels(as.factor(score_long2$class))
tm <- tri2mat(tp, pf)
tm
tri2mat <- function(tp, pf) {
tp <- cbind(tp, rep(NA, nrow(tp)))
tp <- rbind(rep(NA, ncol(tp)), tp)
colnames(tp) <- pf
rownames(tp) <- pf
tp[upper.tri(tp)] <- t(tp)[upper.tri(tp)]
#diag(tp) <- 1
tp
}
t_test <- pairwise.t.test(score_long2$score, score_long2$class, p.adjust.method="none", pool.sd=FALSE)
tp <- t_test$p.value
pf <- levels(as.factor(score_long2$class))
tm <- tri2mat(tp, pf)
tm
col = colorRamp2(seq(min(tm, na.rm=TRUE), max(tm, na.rm=TRUE), length=3), c("red", "#EEEEEE", "blue"), space="RGB")
Heatmap(tm, col=col, heatmap_legend_param=list(title="p.value"),
cluster_rows=FALSE, cluster_columns=FALSE)
?`ComplexHeatmap-package`
png("exp_heatmap.png")
Heatmap(tm, col=col, heatmap_legend_param=list(title="p.value"),
cluster_rows=FALSE, cluster_columns=FALSE)
dev.off()
?pnf
?png
t_test <- pairwise.t.test(score_long2$score, score_long2$class, p.adjust.method="none", pool.sd=FALSE)
tp <- t_test$p.value
pf <- levels(as.factor(score_long2$class))
tm <- tri2mat(tp, pf)
col = colorRamp2(seq(min(tm, na.rm=TRUE), max(tm, na.rm=TRUE), length=3), c("red", "#EEEEEE", "blue"), space="RGB")
png("exp_heatmap.png", res=300)
Heatmap(tm, col=col, heatmap_legend_param=list(title="p.value"),
cluster_rows=FALSE, cluster_columns=FALSE)
dev.off()
