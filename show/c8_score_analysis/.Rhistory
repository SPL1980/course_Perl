list(a = format(coef(m)[1], digits=2),
b = format(coef(m)[2], digits=2),
r1 = format(sqrt(summary(m)$r.squared), digits=3),
r2 = format(summary(m)$r.squared, digits=3)))
as.character(as.expression(eq))
}
lm_eqn <- function(df) {
m <- lm(final ~ exp, df)
eq <- substitute(italic(y) == a + b %.% italic(x) *","* ~~italic(r)~"="~r1 *","* ~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits=2),
b = format(coef(m)[2], digits=2),
r1 = format(sqrt(summary(m)$r.squared), digits=3),
r2 = format(summary(m)$r.squared, digits=3)))
as.character(as.expression(eq))
}
lm_eqn <- function(df) {
m <- lm(final ~ exp, df)
eq <- substitute(italic(y) == a + b %.% italic(x) *","* ~~italic(r)~"="~r1 *","* ~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits=2),
b = format(coef(m)[2], digits=2),
r1 = format(sqrt(summary(m)$r.squared), digits=3),
r2 = format(summary(m)$r.squared, digits=3)))
as.character(as.expression(eq))
}
score_wide2 <- score_wide %>% group_by(id,name,final) %>% summarise(exp=mean(c(e6,e7,e8,e9)))
#score_exp <- score_long %>% filter(str_detect(class, "e")) %>% group_by(id,name) %>% summarise(exp=mean(score))
#score_final <- score_long %>% filter(str_detect(class, "final")) %>% group_by(id,name) %>% summarise(final=score)
#score_wide2 <- inner_join(score_exp, score_final)
gr <- ggplot(score_wide2, aes(exp, final))
gr <- gr + geom_point()
gr <- gr + geom_smooth(method="lm", color="red", formula=y~x)
gr <- gr + geom_text(x=80, y=100, label=lm_eqn(score_wide2), parse=TRUE, size=4, color="blue")
ggsave("correlation_plot.png", gr)
lm_eqn <- function(df) {
m <- lm(final ~ exp, df)
eq <- substitute(italic(y) == a + b %.% italic(x) *","* italic(r)~"="~r1 *","* ~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits=2),
b = format(coef(m)[2], digits=2),
r1 = format(sqrt(summary(m)$r.squared), digits=3),
r2 = format(summary(m)$r.squared, digits=3)))
as.character(as.expression(eq))
}
score_wide2 <- score_wide %>% group_by(id,name,final) %>% summarise(exp=mean(c(e6,e7,e8,e9)))
#score_exp <- score_long %>% filter(str_detect(class, "e")) %>% group_by(id,name) %>% summarise(exp=mean(score))
#score_final <- score_long %>% filter(str_detect(class, "final")) %>% group_by(id,name) %>% summarise(final=score)
#score_wide2 <- inner_join(score_exp, score_final)
gr <- ggplot(score_wide2, aes(exp, final))
gr <- gr + geom_point()
gr <- gr + geom_smooth(method="lm", color="red", formula=y~x)
gr <- gr + geom_text(x=80, y=100, label=lm_eqn(score_wide2), parse=TRUE, size=4, color="blue")
ggsave("correlation_plot.png", gr)
lm_eqn <- function(df) {
m <- lm(final ~ exp, df)
eq <- substitute(italic(y) == a + b %.% italic(x) *","* ~~italic(r)"="r1 *","* ~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits=2),
b = format(coef(m)[2], digits=2),
r1 = format(sqrt(summary(m)$r.squared), digits=3),
r2 = format(summary(m)$r.squared, digits=3)))
as.character(as.expression(eq))
}
score_wide2 <- score_wide %>% group_by(id,name,final) %>% summarise(exp=mean(c(e6,e7,e8,e9)))
#score_exp <- score_long %>% filter(str_detect(class, "e")) %>% group_by(id,name) %>% summarise(exp=mean(score))
#score_final <- score_long %>% filter(str_detect(class, "final")) %>% group_by(id,name) %>% summarise(final=score)
#score_wide2 <- inner_join(score_exp, score_final)
gr <- ggplot(score_wide2, aes(exp, final))
gr <- gr + geom_point()
gr <- gr + geom_smooth(method="lm", color="red", formula=y~x)
gr <- gr + geom_text(x=80, y=100, label=lm_eqn(score_wide2), parse=TRUE, size=4, color="blue")
ggsave("correlation_plot.png", gr)
lm_eqn <- function(df) {
m <- lm(final ~ exp, df)
eq <- substitute(italic(y) == a + b %.% italic(x) *","* ~~italic(r)~"="~r1 *","* ~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits=2),
b = format(coef(m)[2], digits=2),
r1 = format(sqrt(summary(m)$r.squared), digits=3),
r2 = format(summary(m)$r.squared, digits=3)))
as.character(as.expression(eq))
}
score_wide2 <- score_wide %>% group_by(id,name,final) %>% summarise(exp=mean(c(e6,e7,e8,e9)))
#score_exp <- score_long %>% filter(str_detect(class, "e")) %>% group_by(id,name) %>% summarise(exp=mean(score))
#score_final <- score_long %>% filter(str_detect(class, "final")) %>% group_by(id,name) %>% summarise(final=score)
#score_wide2 <- inner_join(score_exp, score_final)
gr <- ggplot(score_wide2, aes(exp, final))
gr <- gr + geom_point()
gr <- gr + geom_smooth(method="lm", color="red", formula=y~x)
gr <- gr + geom_text(x=80, y=100, label=lm_eqn(score_wide2), parse=TRUE, size=4, color="blue")
ggsave("correlation_plot.png", gr)
library(readr)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
score_wide <- read_csv("score.csv")
score_long <- gather(score_wide, "class", "score", 3:7)
score_long <- score_long %>% mutate(id2=as.factor(str_replace(id, "20130521", "")))
score_long2 <- score_long %>% filter(str_detect(class, "e"))
gb <- ggplot(score_long2, aes(class, score))
gb <- gb + geom_boxplot(aes(color=class))
ggsave("exp_boxplog.png", gb)
gl <- ggplot(score_long2, aes(class, score, group=id2))
gl <- gl + geom_point()
gl <- gl + geom_line(aes(color=id2))
ggsave("id_lineplot.png", gl)
lm_eqn <- function(df) {
m <- lm(final ~ exp, df)
eq <- substitute(italic(y) == a + b %.% italic(x) *","* ~~italic(r)~"="~r1 *","* ~~italic(R)^2~"="~r2,
list(a = format(coef(m)[1], digits=2),
b = format(coef(m)[2], digits=2),
r1 = format(sqrt(summary(m)$r.squared), digits=3),
r2 = format(summary(m)$r.squared, digits=3)))
as.character(as.expression(eq))
}
score_wide2 <- score_wide %>% group_by(id,name,final) %>% summarise(exp=mean(c(e6,e7,e8,e9)))
#score_exp <- score_long %>% filter(str_detect(class, "e")) %>% group_by(id,name) %>% summarise(exp=mean(score))
#score_final <- score_long %>% filter(str_detect(class, "final")) %>% group_by(id,name) %>% summarise(final=score)
#score_wide2 <- inner_join(score_exp, score_final)
gr <- ggplot(score_wide2, aes(exp, final))
gr <- gr + geom_point()
gr <- gr + geom_smooth(method="lm", color="red", formula=y~x)
gr <- gr + geom_text(x=80, y=100, label=lm_eqn(score_wide2), parse=TRUE, size=4, color="blue")
ggsave("correlation_plot.png", gr)
library(readr)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
score_wide <- read_csv("score.csv")
score_long <- gather(score_wide, "class", "score", 3:7)
score_long <- score_long %>% mutate(id2=as.factor(str_replace(id, "20130521", "")))
score_wide2 <- score_wide %>% group_by(id,name,final) %>% summarise(exp=mean(c(e6,e7,e8,e9)))
score_wide3 <- score_wide2 %>% filter(id!="2013052125")
library(readr)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
score_wide <- read_csv("score.csv")
score_long <- gather(score_wide, "class", "score", 3:7)
score_long <- score_long %>% mutate(id2=as.factor(str_replace(id, "20130521", "")))
score_long2 <- score_long %>% filter(str_detect(class, "e"))
gb <- ggplot(score_long2, aes(class, score))
gb <- gb + geom_boxplot(aes(color=class))
ggsave("exp_boxplog.png", gb)
gl <- ggplot(score_long2, aes(class, score, group=id2))
gl <- gl + geom_point()
gl <- gl + geom_line(aes(color=id2))
ggsave("id_lineplot.png", gl)
lm_eqn <- function(df) {
m <- lm(final ~ exp, df)
eq <- substitute(italic(y) == a + b %.% italic(x) *","* ~~italic(r)~"="~r1 *","* ~~italic(R)^2~"="~r2,
list(a = format(coef(m)[1], digits=2),
b = format(coef(m)[2], digits=2),
r1 = format(sqrt(summary(m)$r.squared), digits=3),
r2 = format(summary(m)$r.squared, digits=3)))
as.character(as.expression(eq))
}
score_wide2 <- score_wide %>% group_by(id,name,final) %>% summarise(exp=mean(c(e6,e7,e8,e9)))
#score_exp <- score_long %>% filter(str_detect(class, "e")) %>% group_by(id,name) %>% summarise(exp=mean(score))
#score_final <- score_long %>% filter(str_detect(class, "final")) %>% group_by(id,name) %>% summarise(final=score)
#score_wide2 <- inner_join(score_exp, score_final)
gr <- ggplot(score_wide2, aes(exp, final))
gr <- gr + geom_point()
gr <- gr + geom_smooth(method="lm", color="red", formula=y~x)
gr <- gr + geom_text(x=82, y=100, label=lm_eqn(score_wide2), parse=TRUE, size=5, color="blue")
ggsave("correlation_plot.png", gr)
score_wide3 <- score_wide2 %>% filter(id!="2013052125")
gr2 <- ggplot(score_wide3, aes(exp, final))
gr2 <- gr2 + geom_point()
gr2 <- gr2 + geom_smooth(method="lm", color="red", formula=y~x)
gr2 <- gr2 + geom_text(x=82, y=100, label=lm_eqn(score_wide3), parse=TRUE, size=5, color="blue")
ggsave("correlation_plot_correct.png", gr2)
library(readr)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
score_wide <- read_csv("score.csv")
score_long <- gather(score_wide, "class", "score", 3:7)
score_long <- score_long %>% mutate(id2=as.factor(str_replace(id, "20130521", "")))
score_wide2 <- score_wide %>% group_by(id,name,final) %>% summarise(exp=mean(c(e6,e7,e8,e9)))
score_wide2 <- score_wide2 %>% filter(final>min(final))
%
score_wide2 <- score_wide %>% group_by(id,name,final) %>% summarise(exp=mean(c(e6,e7,e8,e9)))
score_wide3 <- score_wide2 %>% filter(final>min(final))
which.min(score_wide2$final)
score_wide2[which.min(score_wide2$final)]
score_wide2[1]
score_wide2[,1]
score_wide2[1,]
score_wide2[which.min(score_wide2$final),]
score_wide2[which.min(score_wide2$final),]$id
library(readr)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
score_wide <- read_csv("score.csv")
score_long <- gather(score_wide, "class", "score", 3:7)
score_long <- score_long %>% mutate(id2=as.factor(str_replace(id, "20130521", "")))
score_long2 <- score_long %>% filter(str_detect(class, "e"))
gb <- ggplot(score_long2, aes(class, score))
gb <- gb + geom_boxplot(aes(color=class))
ggsave("exp_boxplog.png", gb)
gl <- ggplot(score_long2, aes(class, score, group=id2))
gl <- gl + geom_point()
gl <- gl + geom_line(aes(color=id2))
ggsave("id_lineplot.png", gl)
lm_eqn <- function(df) {
m <- lm(final ~ exp, df)
eq <- substitute(italic(y) == a + b %.% italic(x) *","* ~~italic(r)~"="~r1 *","* ~~italic(R)^2~"="~r2,
list(a = format(coef(m)[1], digits=2),
b = format(coef(m)[2], digits=2),
r1 = format(sqrt(summary(m)$r.squared), digits=3),
r2 = format(summary(m)$r.squared, digits=3)))
as.character(as.expression(eq))
}
score_wide2 <- score_wide %>% group_by(id,name,final) %>% summarise(exp=mean(c(e6,e7,e8,e9)))
#score_exp <- score_long %>% filter(str_detect(class, "e")) %>% group_by(id,name) %>% summarise(exp=mean(score))
#score_final <- score_long %>% filter(str_detect(class, "final")) %>% group_by(id,name) %>% summarise(final=score)
#score_wide2 <- inner_join(score_exp, score_final)
gr <- ggplot(score_wide2, aes(exp, final))
gr <- gr + geom_point()
gr <- gr + geom_smooth(method="lm", color="red", formula=y~x)
gr <- gr + geom_text(x=82, y=100, label=lm_eqn(score_wide2), parse=TRUE, size=5, color="blue")
ggsave("correlation_plot.png", gr)
id1 <- score_wide2[which.min(score_wide2$final),]$id
score_wide3 <- wcore_wide2 %>% filter(id!=id1)
#score_wide3 <- score_wide2 %>% filter(id!="2013052125")
gr2 <- ggplot(score_wide3, aes(exp, final))
gr2 <- gr2 + geom_point()
gr2 <- gr2 + geom_smooth(method="lm", color="red", formula=y~x)
gr2 <- gr2 + geom_text(x=82, y=100, label=lm_eqn(score_wide3), parse=TRUE, size=5, color="blue")
ggsave("correlation_plot_correct.png", gr2)
id1 <- score_wide2[which.min(score_wide2$final),]$id
score_wide3 <- wcore_wide2 %>% filter(id!=id1)
score_wide3 <- score_wide2 %>% filter(id!=id1)
#score_wide3 <- score_wide2 %>% filter(id!="2013052125")
gr2 <- ggplot(score_wide3, aes(exp, final))
gr2 <- gr2 + geom_point()
gr2 <- gr2 + geom_smooth(method="lm", color="red", formula=y~x)
gr2 <- gr2 + geom_text(x=82, y=100, label=lm_eqn(score_wide3), parse=TRUE, size=5, color="blue")
ggsave("correlation_plot_correct.png", gr2)
library(readr)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
score_wide <- read_csv("score.csv")
score_long <- gather(score_wide, "class", "score", 3:7)
score_long <- score_long %>% mutate(id2=as.factor(str_replace(id, "20130521", "")))
score_long2 <- score_long %>% filter(str_detect(class, "e"))
gb <- ggplot(score_long2, aes(class, score))
gb <- gb + geom_boxplot(aes(color=class))
ggsave("exp_boxplog.png", gb)
gl <- ggplot(score_long2, aes(class, score, group=id2))
gl <- gl + geom_point()
gl <- gl + geom_line(aes(color=id2))
ggsave("id_lineplot.png", gl)
lm_eqn <- function(df) {
m <- lm(final ~ exp, df)
eq <- substitute(italic(y) == a + b %.% italic(x) *","* ~~italic(r)~"="~r1 *","* ~~italic(R)^2~"="~r2,
list(a = format(coef(m)[1], digits=2),
b = format(coef(m)[2], digits=2),
r1 = format(sqrt(summary(m)$r.squared), digits=3),
r2 = format(summary(m)$r.squared, digits=3)))
as.character(as.expression(eq))
}
score_wide2 <- score_wide %>% group_by(id,name,final) %>% summarise(exp=mean(c(e6,e7,e8,e9)))
#score_exp <- score_long %>% filter(str_detect(class, "e")) %>% group_by(id,name) %>% summarise(exp=mean(score))
#score_final <- score_long %>% filter(str_detect(class, "final")) %>% group_by(id,name) %>% summarise(final=score)
#score_wide2 <- inner_join(score_exp, score_final)
gr <- ggplot(score_wide2, aes(exp, final))
gr <- gr + geom_point()
gr <- gr + geom_smooth(method="lm", color="red", formula=y~x)
gr <- gr + geom_text(x=82, y=100, label=lm_eqn(score_wide2), parse=TRUE, size=5, color="blue")
ggsave("correlation_plot.png", gr)
id1 <- score_wide2[which.min(score_wide2$final),]$id
score_wide3 <- score_wide2 %>% filter(id!=id1)
#score_wide3 <- score_wide2 %>% filter(id!="2013052125")
gr2 <- ggplot(score_wide3, aes(exp, final))
gr2 <- gr2 + geom_point()
gr2 <- gr2 + geom_smooth(method="lm", color="red", formula=y~x)
gr2 <- gr2 + geom_text(x=82, y=100, label=lm_eqn(score_wide3), parse=TRUE, size=5, color="blue")
ggsave("correlation_plot_correct.png", gr2)
library(readr)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
score_wide <- read_csv("score.csv")
score_long <- gather(score_wide, "class", "score", 3:7)
View(score_wide)
View(score_wide)
View(score_long)
library(readr)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
score_wide <- read_csv("score_2013.csv")
score_long <- gather(score_wide, "class", "score", 3:7)
score_long <- score_long %>% mutate(id2=as.factor(str_replace(id, "20130521", "")))
score_long2 <- score_long %>% filter(str_detect(class, "e"))
gb <- ggplot(score_long2, aes(class, score))
gb <- gb + geom_boxplot(aes(color=class))
ggsave("exp_boxplog.png", gb)
gl <- ggplot(score_long2, aes(class, score, group=id2))
gl <- gl + geom_point()
gl <- gl + geom_line(aes(color=id2))
ggsave("id_lineplot.png", gl)
lm_eqn <- function(df) {
m <- lm(final ~ exp, df)
eq <- substitute(italic(y) == a + b %.% italic(x) *","* ~~italic(r)~"="~r1 *","* ~~italic(R)^2~"="~r2,
list(a = format(coef(m)[1], digits=2),
b = format(coef(m)[2], digits=2),
r1 = format(sqrt(summary(m)$r.squared), digits=3),
r2 = format(summary(m)$r.squared, digits=3)))
as.character(as.expression(eq))
}
score_wide2 <- score_wide %>% group_by(id,name,final) %>% summarise(exp=mean(c(e6,e7,e8,e9)))
#score_exp <- score_long %>% filter(str_detect(class, "e")) %>% group_by(id,name) %>% summarise(exp=mean(score))
#score_final <- score_long %>% filter(str_detect(class, "final")) %>% group_by(id,name) %>% summarise(final=score)
#score_wide2 <- inner_join(score_exp, score_final)
gr <- ggplot(score_wide2, aes(exp, final))
gr <- gr + geom_point()
gr <- gr + geom_smooth(method="lm", color="red", formula=y~x)
gr <- gr + geom_text(x=82, y=100, label=lm_eqn(score_wide2), parse=TRUE, size=5, color="blue")
ggsave("correlation_plot.png", gr)
id1 <- score_wide2[which.min(score_wide2$final),]$id
score_wide3 <- score_wide2 %>% filter(id!=id1)
#score_wide3 <- score_wide2 %>% filter(id!="2013052125")
gr2 <- ggplot(score_wide3, aes(exp, final))
gr2 <- gr2 + geom_point()
gr2 <- gr2 + geom_smooth(method="lm", color="red", formula=y~x)
gr2 <- gr2 + geom_text(x=82, y=100, label=lm_eqn(score_wide3), parse=TRUE, size=5, color="blue")
ggsave("correlation_plot_correct.png", gr2)
score2014 <- read_csv("score_2014.csv")
View(score_wide2)
m <- lm(final ~ exp, score_wide3)
m
predict.lm(m, score2014)
View(score2014)
predict(m, score2014)
2.381*84.5-124.148
predict(m, score2014, interval="prediction")
library(dplyr)
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
s4 <- bind_cols(score2014, mp)
mode(mp)
s4 <- bind_cols(score2014, as.data.frame(mp))
View(s4)
View(score_long2)
colnames(s4) <- c("id", "name", "exp", "final", "fl", "fu")
g <- ggplot(s4, aes(x=id, y=final))
g <- g + geom_bar(fill=id, colour=id)
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
g <- ggplot(s4, aes(x=id, y=final))
g <- g + geom_bar()
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
View(s4)
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar()
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar()
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
g <- ggplot(s4, aes(x=as.factor(id), y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
s4 <- bind_cols(score2014, as.data.frame(mp))
colnames(s4) <- c("ID", "name", "exp", "final", "fl", "fu")
s4 <- s4 %>% mutate(id=as.factor(str_replace(id, "20140521", "")))
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
library(readr)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
s4 <- bind_cols(score2014, as.data.frame(mp))
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
s4 <- bind_cols(score2014, as.data.frame(mp))
colnames(s4) <- c("ID", "name", "exp", "final", "fl", "fu")
s4 <- s4 %>% mutate(id=as.factor(str_replace(ID, "20140521", "")))
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g
?geom_hline
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=5)
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=12)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score", fill="Student ID")
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score", fill="ID")
g
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g <- g + guides(fill=FALSE)
g
?predict
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
View(mp)
mp <- predict(m, score2014, interval="co")
View(mp)
mp <- predict(m, score2014, interval="confidence")
View(mp)
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="confidence")
s4 <- bind_cols(score2014, as.data.frame(mp))
colnames(s4) <- c("ID", "name", "exp", "final", "fl", "fu")
s4 <- s4 %>% mutate(id=as.factor(str_replace(ID, "20140521", "")))
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g <- g + guides(fill=FALSE)
g
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
s4 <- bind_cols(score2014, as.data.frame(mp))
colnames(s4) <- c("ID", "name", "exp", "final", "fl", "fu")
s4 <- s4 %>% mutate(id=as.factor(str_replace(ID, "20140521", "")))
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g <- g + guides(fill=FALSE)
g
m <- lm(final ~ exp, score_wide3)
score2014 <- read_csv("score_2014.csv")
mp <- predict(m, score2014, interval="prediction")
s4 <- bind_cols(score2014, as.data.frame(mp))
colnames(s4) <- c("ID", "name", "exp", "final", "fl", "fu")
s4 <- s4 %>% mutate(id=as.factor(str_replace(ID, "20140521", "")))
g <- ggplot(s4, aes(x=id, y=final, fill=id))
g <- g + theme_gray(base_size=18)
g <- g + geom_bar(stat="identity")
g <- g + geom_errorbar(aes(ymin=fl, ymax=fu), width=0.2)
g <- g + geom_hline(yintercept=60, color="red", size=2)
g <- g + labs(x="Student ID", y="Predicted final exam score")
g <- g + guides(fill=FALSE)
ggsave("prediction_2014.png", g)
