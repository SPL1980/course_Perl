?read_tsv
library(readr)
?read_tsv
x <- read_tsv("t", col_names=FALSE)
View(x)
mean(x$X1)
summary(x$X1)
library(readr)
percent <- read_tsv("percents.txt", col_names=FALSE)
View(percent)
percent <- percent %>% rename(X1=perc)
g <- ggplot(percent, aes(x=perc))
library(dplyr)
percent <- percent %>% rename(X1=perc)
library(readr)
library(dplyr)
percent <- read_tsv("percents.txt", col_names=FALSE)
percent <- percent %>% rename(perc=X1)
g <- ggplot(percent, aes(x=perc))
g <- g + geom_hist()
g
library(ggplot2)
g <- ggplot(percent, aes(x=perc))
g <- g + geom_hist()
g
g <- ggplot(percent, aes(x=perc))
g <- g + geom_density()
g
g <- ggplot(percent, aes(x=perc))
g <- g + geom_density() + geom_density()
g
g <- ggplot(percent, aes(x=perc))
g <- g + geom_histogram() + geom_density()
g
g <- ggplot(percent, aes(x=perc))
g <- g + geom_histogram()
g <- g + geom_density()
g
g <- ggplot(percent, aes(x=perc))
g <- g + geom_histogram(color="")
g <- g + geom_density()
g
g <- ggplot(percent, aes(x=perc))
g <- g + geom_histogram(fill="white")
g <- g + geom_line()
g
g <- ggplot(percent, aes(x=perc))
g <- g + geom_histogram(fill="white")
g
g <- ggplot(percent, aes(x=perc))
g <- g + geom_histogram(fill="white", color="black")
g
g <- ggplot(percent, aes(x=perc))
g <- g + geom_histogram(fill="white", color="black")
g <- g + geom_line(stat="density")
g
g <- ggplot(percent, aes(x=perc))
g <- g + geom_histogram(fill="white", color="black")
g <- g + geom_density()
g
g <- ggplot(percent, aes(x=perc))
g <- g + geom_density()
g
g <- ggplot(percent, aes(x=perc))
g <- g + geom_histogram(fill="white", color="black")
g <- g + geom_density(stat="density")
g
g <- ggplot(percent, aes(x=perc))
g <- g + geom_density()
g <- g + geom_histogram(fill="white", color="black")
g
?geom_density
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g
?geom_histogram
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(bins=100, fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g +
g
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(bins=100, fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g +
g
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(bins=100, fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g +
g
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(stat="bin", bins=100, fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g +
g
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(stat="bin", bins=50, fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g +
g
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(sintercept=25)
g
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(xintercept=25)
g
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(xintercept=25, color="red")
g
?t.test
t.test(percent$perc, mu=25)
t <- t.test(percent$perc, mu=25)
t$p.value
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(xintercept=25, color="red")
g <- g + annotate("text", x=24, y=0.3, label=t.p)
g
t <- t.test(percent$perc, mu=25)
t.p <- t$p.value
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(xintercept=25, color="red")
g <- g + annotate("text", x=24, y=0.3, label=t.p)
g
?format
t.p <- format(t$p.value, digits=3)
t.p
t.p <- format(t$p.value, digits=6)
t.p
t.p <- format(t$p.value, digits=4)
t.p
t.p <- format(t$p.value, digits=3)
t.p
t <- t.test(percent$perc, mu=25)
t.p <- format(t$p.value, digits=4)
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(xintercept=25, color="red")
g <- g + annotate("text", x=24, y=0.3, label=t.p)
g
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(xintercept=25, color="red")
g <- g + annotate("text", x=24, y=0.3, label=paste0(italic(p), "=", t.p))
g
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(xintercept=25, color="red")
g <- g + geom_text(x=24, y=0.3, label=paste0(italic(p), "=", t.p), parse=TRUE)
g
t <- t.test(percent$perc, mu=25)
t.p <- format(t$p.value, digits=8)
t.p
formula <- sprintf("italic(p) = %.4f", t.p)
?sprintf
sprintf("%.3f", pi)
t <- t.test(percent$perc, mu=25)
formula <- sprintf("italic(p) = %.4f", round(t$p.value, 4))
formula
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(xintercept=25, color="red")
g <- g + geom_text(x=24, y=0.3, label=formula, parse=TRUE)
g
percent <- percent %>% rename(perc=X1)
t <- t.test(percent$perc, mu=25)
library(readr)
library(dplyr)
library(ggplot2)
percent <- read_tsv("percents.txt", col_names=FALSE)
percent <- percent %>% rename(perc=X1)
t <- t.test(percent$perc, mu=25)
formula <- sprintf("italic(p) = %.4f", round(t$p.value, 4))
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(xintercept=25, color="red")
g <- g + geom_text(x=24, y=0.3, label=formula, parse=TRUE)
g
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(xintercept=25, color="red")
g <- g + geom_text(x=24, y=0.3, aes(label=formula), parse=TRUE)
g
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(xintercept=25, color="red")
g <- g + annotate("text", x=24, y=0.3, label=formula, parse=TRUE)
g
?annotate
t.p <- round(t$p.value, 4)
t.p
t <- t.test(percent$perc, mu=25)
formula <- sprintf("italic(p) == %.4f", round(t$p.value, 4))
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(xintercept=25, color="red")
g <- g + annotate("text", x=24, y=0.3, label=formula, parse=TRUE)
g
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
g <- g + xlab("Average % identity between pairs of random DNA sequences") + ylab("Density")
g <- g + geom_vline(xintercept=25, color="red")
g <- g + annotate("text", x=24, y=0.3, label=formula, parse=TRUE, color="darkred")
g
?basesize
g <- ggplot(percent, aes(x=perc, y=..density..))
g <- g + geom_histogram(fill="cornsilk", color="grey60")
g <- g + geom_density()
p <- p + theme_gray(base_size=20)
g <- g + labs(x="Average % identity between pairs of random DNA sequences", y="Density")
g <- g + geom_vline(xintercept=25, color="red")
g <- g + annotate("text", x=24, y=0.3, label=formula, parse=TRUE, color="darkred")
p <- ggplot(percent, aes(x=perc, y=..density..))
p <- p + geom_histogram(fill="cornsilk", color="grey60")
p <- p + geom_density()
p <- p + theme_gray(base_size=20)
p <- p + labs(x="Average % identity between pairs of random DNA sequences", y="Density")
p <- p + geom_vline(xintercept=25, color="red")
p <- p + annotate("text", x=24, y=0.3, label=formula, parse=TRUE, color="darkred")
p
?annotate
p <- ggplot(percent, aes(x=perc, y=..density..))
p <- p + geom_histogram(fill="cornsilk", color="grey60")
p <- p + geom_density()
p <- p + theme_gray(base_size=20)
p <- p + labs(x="Average % identity between pairs of random DNA sequences", y="Density")
p <- p + geom_vline(xintercept=25, color="red")
p <- p + annotate("text", x=24, y=0.3, label=formula, parse=TRUE, color="darkred", size=2)
p
p <- ggplot(percent, aes(x=perc, y=..density..))
p <- p + geom_histogram(fill="cornsilk", color="grey60")
p <- p + geom_density()
p <- p + theme_gray(base_size=20)
p <- p + labs(x="Average % identity between pairs of random DNA sequences", y="Density")
p <- p + geom_vline(xintercept=25, color="red")
p <- p + annotate("text", x=24, y=0.3, label=formula, parse=TRUE, color="darkred", size=20)
p
p <- ggplot(percent, aes(x=perc, y=..density..))
p <- p + geom_histogram(fill="cornsilk", color="grey60")
p <- p + geom_density()
p <- p + theme_gray(base_size=20)
p <- p + labs(x="Average % identity between pairs of random DNA sequences", y="Density")
p <- p + geom_vline(xintercept=25, color="red")
p <- p + annotate("text", x=24, y=0.3, label=formula, parse=TRUE, color="darkred", size=10)
p
p <- ggplot(percent, aes(x=perc, y=..density..))
p <- p + geom_histogram(fill="cornsilk", color="grey60")
p <- p + geom_density()
p <- p + theme_gray(base_size=20)
p <- p + labs(x="Average % identity between pairs of random DNA sequences", y="Density")
p <- p + geom_vline(xintercept=25, color="red")
p <- p + annotate("text", x=24, y=0.3, label=formula, parse=TRUE, color="darkred", size=5)
p
p <- ggplot(percent, aes(x=perc, y=..density..))
p <- p + geom_histogram(fill="cornsilk", color="grey60")
p <- p + geom_density()
p <- p + theme_gray(base_size=20)
p <- p + labs(x="Average % identity between pairs of random DNA sequences", y="Density")
p <- p + geom_vline(xintercept=25, color="red")
p <- p + annotate("text", x=24, y=0.3, label=formula, parse=TRUE, color="darkred", size=10)
p
p <- ggplot(percent, aes(x=perc, y=..density..))
p <- p + geom_histogram(fill="cornsilk", color="grey60")
p <- p + geom_density()
p <- p + theme_gray(base_size=20)
p <- p + labs(x="Average % identity between pairs of random DNA sequences", y="Density")
p <- p + geom_vline(xintercept=25, color="red")
p <- p + annotate("text", x=24, y=0.3, label=formula, parse=TRUE, color="darkred", size=8)
p
?ggsave
library(readr)
library(dplyr)
library(ggplot2)
percent <- read_tsv("percents.txt", col_names=FALSE)
percent <- percent %>% rename(perc=X1)
t <- t.test(percent$perc, mu=25)
formula <- sprintf("italic(p) == %.4f", round(t$p.value, 4))
p <- ggplot(percent, aes(x=perc, y=..density..))
p <- p + geom_histogram(fill="cornsilk", color="grey60")
p <- p + geom_density()
p <- p + theme_gray(base_size=20)
p <- p + labs(x="Average % identity between pairs of random DNA sequences", y="Density")
p <- p + geom_vline(xintercept=25, color="red")
p <- p + annotate("text", x=24, y=0.3, label=formula, parse=TRUE, color="darkred", size=8)
ggsave("percent_density.png", p)
library(readr)
library(dplyr)
library(ggplot2)
percent <- read_tsv("percents_sample.txt")
28*1000
View(percent)
dist <- percent %>% group_by(sample) %>% (t.p<-t.test(perc, mu=25)$p.value)
dist <- percent %>% group_by(sample) %>% (t.p<-t.test(percent$perc, mu=25)$p.value)
t.test(percent$perc, mu=25)
t.test(percent$perc, mu=25)$p.value
dist <- percent %>% group_by(sample) %>% summarise(t.p<-t.test(percent$perc, mu=25)$p.value)
View(dist)
dist <- percent %>% group_by(sample) %>% summarise_each(t.p=t.test(percent$perc, mu=25)$p.value)
?summarise_each
dist <- percent %>% group_by(sample) %>%
summarise_each(funs(t.test(.[vs==0], mu=25)$p.value, vars=perc))
dist <- percent %>% group_by(sample) %>%
summarise_each(funs(t.test(perc, mu=25)$p.value))
View(dist)
t <- percent %>% filter(sample=="S0")
t.test(t$perc)$p.value
t.test(t$perc,mu=25)$p.value
t <- percent %>% filter(sample=="S100")
t.test(t$perc,mu=25)$p.value
dist %>% filter(perc<=0.05)
dist <- percent %>% group_by(sample) %>%
summarise_each(t.p=funs(t.test(perc, mu=25)$p.value))
dist <- percent %>% group_by(sample) %>%
summarise_each(funs(t.test(perc, mu=25)$p.value, funs(fivenum(perc))))
percent <- read_tsv("percents_sample.txt")
dist <- percent %>% group_by(sample) %>%
summarise_each(funs(t.test(perc, mu=25)$p.value, funs(fivenum(perc))))
View(dist)
shapiro.test(t)
shapiro.test(t$perc)
shapiro.test(t$perc)$p.value
percent <- read_tsv("percents_sample.txt")
dist <- percent %>% group_by(sample) %>%
summarise_each(funs(t.test(perc, mu=25)$p.value, shapiro.test(perc)$p.value))
View(dist)
dist <- percent %>% group_by(sample) %>%
summarise_each(funs(t.test(perc, mu=25)$p.value)) %>% rename(t.p=perc)
dist_s <- percent %>% group_by(sample) %>%
summarise_each(funcs(shapiro.test(perc)$p.value))
dist_s <- percent %>% group_by(sample) %>%
summarise_each(funs(shapiro.test(perc)$p.value))
View(dist_s)
dist_s%>%filter(perc<=0.05)
67/10000
percent <- read_tsv("percents_sample.txt")
dist_t <- percent %>% group_by(sample) %>%
summarise_each(funs(t.test(perc, mu=25)$p.value)) %>% rename(t.p=perc)
dist_s <- percent %>% group_by(sample) %>%
summarise_each(funs(shapiro.test(perc)$p.value)) %>% rename(s.p=perc)
dist <- inner_join(dist_t, dist_s)
View(dist)
percent <- read_tsv("percents_sample.txt")
dist_t <- percent %>% group_by(sample) %>%
summarise_each(funs(t.test(perc, mu=25)$p.value)) %>% rename(t.p=perc)
dist_s <- percent %>% group_by(sample) %>%
summarise_each(funs(shapiro.test(perc)$p.value)) %>% rename(s.p=perc)
dist <- inner_join(dist_t, dist_s)
dist %>% filter(t.p<=0.05)
dist %>% filter(s.p<=0.05)
600/10000
